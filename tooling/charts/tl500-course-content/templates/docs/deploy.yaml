{{- if .Values.docs }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.docs.name }}"
  namespace: "{{ .Values.docs.namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.docs.name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.docs.name }}"
    spec:
{{- if .Values.docs.config }}
      volumes:
        - name: {{ .Values.docs.config.configMapName }}
          configMap:
            name: {{ .Values.docs.config.configMapName }}
            defaultMode: 420
            optional: true
{{- end }}
      containers:
        - name: {{ .Values.docs.name }}
          image: {{ .Values.docs.image }}
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
{{- if .Values.docs.config }}
          volumeMounts:
            - name: {{ .Values.docs.config.configMapName }}
              mountPath: /docs/config
{{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
{{- end }}
